name: Build Game

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write  # Allow the workflow to create a release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build with PyInstaller
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pyinstaller --onefile --hidden-import=text_rpg.ui --hidden-import=text_rpg.player --hidden-import=text_rpg.enemy --hidden-import=text_rpg.character --hidden-import=text_rpg.utils text_rpg/main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: game
        path: dist/main.exe  # Ensure it's an .exe file

    - name: Generate Alpha Version
      id: get_version
      run: echo "VERSION=v0.1.0-alpha.$(git rev-list --count HEAD)" >> $GITHUB_ENV

    - name: Create Alpha Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - Alpha Version
        draft: false
        prerelease: true  # Mark as a pre-release

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/main.exe
        asset_name: main.exe
        asset_content_type: application/octet-stream
